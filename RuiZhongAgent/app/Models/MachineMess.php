<?php
    // +----------------------------------------------------------------------
    // | Z Framework [ The Fast Php Framework ]
    // +----------------------------------------------------------------------
    // | Copyright (c) 2016~2018 http://z_framework.fastrun.cn All rights reserved.
    // +----------------------------------------------------------------------
    // | Licensed ( http://www.apache.org/licenses/LICENSE-2.0 )
    // +----------------------------------------------------------------------
    // | Author: 张吉凯 <919342864@qq.com>
    // +----------------------------------------------------------------------
    // | Github: CrazyCodes <https://github.com/CrazyCodes>
    // +----------------------------------------------------------------------
    namespace App\Models;
    
    use Illuminate\Database\Eloquent\Model;
    use Illuminate\Support\MessageBag;
    
    class MachineMess extends Model
    {
        protected $table = "machine_mess";
        
        protected $connection = 'ruizhong';
        
        public $timestamps = false;
        
        public static function boot()
        {
            parent::boot(); // TODO: Change the autogenerated stub
            
            static::creating(function () {
                
                $numberList = [];
                
                $request = request()->all();
                
                if (abs($request['machine_code_start'] - $request['machine_code_end']) > 1000) {
                    $error = new MessageBag([
                        'title'   => 'title...',
                        'message' => 'message....',
                    ]);
                    
                    return back()->with(compact('error'));
                }
                
                for ($number = $request['machine_code_start']; $number <= $request['machine_code_end']; $number++) {
                    $numberList[] = [
                        'machine_code'    => $number,
                        'add_time'        => 0,
                        'ok_return_money' => 0,
                        'return_num'      => 0,
                        'return_status'   => 0,
                    ];
                }
                
                $response = MachineMess::insert($numberList);
                
                $success = new MessageBag([
                    'title'   => 'title...',
                    'message' => 'message....',
                ]);
                
                return back()->with(compact('success'));
                
            });
        }
        
        public function user()
        {
            return $this->belongsTo(User::class);
        }
        
        public function info()
        {
            return $this->belongsTo(MachineInfo::class);
        }
    }
